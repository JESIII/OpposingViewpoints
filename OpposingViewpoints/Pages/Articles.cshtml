@page "{topic}"
@model OpposingViewpoints.Pages.ArticlesModel
@{
    ViewData["Title"] = "Articles - " + Model.Topic;
}

<div class="row" style="padding-top:10px;">
    <h4 style="text-align: center;">@System.Globalization.CultureInfo.CurrentCulture.TextInfo.ToTitleCase(Model.Topic)</h4>
    <div class="col card border-success mb-3" style="display:inline">
        <h4 class="article-card-type">For</h4>
        @foreach (var article in Model.Articles.Where(a => a.bias == Enums.BiasEnum.For))
        {
            <div class="card-body for-neutral-against">
                <p class="card-text">
                    <h5 class="card-title">@article.title</h5>
                    <i class="article-summary">@article.abstrTrunc</i><br />
                    <span class="article-details">
                        Authors: @(article.authors != null ? string.Join(", ", @article.authors.Select(x => x.name)) : "")
                    </span>
                    <br />
                    <span class="article-details">
                        Journal: @(article.journals != null ? string.Join(", ", @article.journals.Select(x => x.title)) : "")
                    </span>
                    <br />
                    <span class="article-details">
                        Published: @article.publishedDate
                    </span>
                    <br />
                    @*                    <span class="article-details">
                Times Cited: @article.citationCount
                </span>*@
                    <br />
                    <span class="article-details">Links:</span>
                    @foreach (var link in @article.sourceFulltextUrls)
                    {
                        <a href="@link">@link</a>

                        <br />
                    }

                </p>
            </div>
        }
    </div>
    <div class="col card border-info mb-3" style="display:inline">
        <h4 class="article-card-type">Neutral</h4>
        @foreach (var article in Model.Articles.Where(a => a.bias == Enums.BiasEnum.Neutral))
        {
            <div class="card-body for-neutral-against">
                <p class="card-text">
                    <h5 class="card-title">@article.title</h5>
                    <i class="article-summary">@article.abstrTrunc</i><br />
                    <span class="article-details">
                        Authors: @(article.authors != null ? string.Join(", ", @article.authors.Select(x => x.name)) : "")
                    </span>
                    <br />
                    <span class="article-details">
                        Journal: @(article.journals != null ? string.Join(", ", @article.journals.Select(x => x.title)) : "")
                    </span>
                    <br />
                    <span class="article-details">
                        Published: @article.publishedDate
                    </span>
                    <br />
                    @*                    <span class="article-details">
                Times Cited: @article.citationCount
                </span>*@
                    <br />
                    <span class="article-details">Links:</span>
                    @foreach (var link in @article.sourceFulltextUrls)
                    {
                        <a href="@link">@link</a>

                        <br />
                    }

                </p>
            </div>
        }
    </div>
    <div class="col card border-danger mb-3">
        <h4 class="article-card-type">Against</h4>
        @foreach (var article in Model.Articles.Where(a => a.bias == Enums.BiasEnum.Against))
        {
            <div class="card-body for-neutral-against">
                <p class="card-text">
                    <h5 class="card-title">@article.title</h5>
                    <i class="article-summary">@article.abstrTrunc</i><br />
                    <span class="article-details">
                        Authors: @(article.authors != null ? string.Join(", ", @article.authors.Select(x => x.name)) : "")
                    </span>
                    <br />
                    <span class="article-details">
                        Journal: @(article.journals != null ? string.Join(", ", @article.journals.Select(x => x.title)) : "")
                    </span>
                    <br />
                    <span class="article-details">
                        Published: @article.publishedDate
                    </span>
                    <br />
                    @*                    <span class="article-details">
                Times Cited: @article.citationCount
                </span>*@
                    <br />
                    <span class="article-details">Links:</span>
                    @foreach (var link in @article.sourceFulltextUrls)
                    {
                        <a href="@link">@link</a>

                        <br />
                    }

                </p>
            </div>
        }
    </div>
</div>