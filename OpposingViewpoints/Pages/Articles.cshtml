@page "{topic}"
@model OpposingViewpoints.Pages.ArticlesModel
@{
    ViewData["Title"] = "Articles - " + Model.Topic;
}

<div class="row" style="padding-top:10px;">
    <h4 style="text-align: center;">@System.Globalization.CultureInfo.CurrentCulture.TextInfo.ToTitleCase(Model.Topic)</h4>
    <div class="col card border-success mb-3" style="display:inline">
        <h4 class="article-card-type">For</h4>
        @foreach (var article in Model.Articles.Where(a => a.bias == Enums.BiasEnum.For))
        {
            <div class="card-body for-neutral-against">
                <p class="card-text">
                    <h5 class="card-title">@article.title[0]</h5>
                    <i class="article-summary">@article.abstrTruncShort</i><br />
                    <details>
                        <summary>more</summary>
                        <i class="article-summary">@article.abstrTruncLong</i><br />
                        <br />
                        <span class="article-details">
                            Authors: @(article.author != null ? string.Join(", ", @article.author.Select(x => x.family + ", " + x.given)) : "N/A")
                        </span>
                        <br />
                        @*                         <span class="article-details">
                    Journal: @(article.journals != null ? string.Join(", ", @article.journals.Select(x => x.title)) : "N/A")
                    </span>
                    <br /> *@
                        <span class="article-details">
                            Published: @(article.pubDate != null ? article.pubDate.Value.ToString("MMMM yyyy") : "N/A")
                        </span>
                        <br>
                        <span class="article-details">Links:</span>
                        <br>
                        @foreach (var link in @article.links)
                        {
                            <a href="@link">@link</a>
                            <br />
                        }
                    </details>

                    <br />


                </p>
            </div>
        }
    </div>
    <div class="col card border-info mb-3" style="display:inline">
        <h4 class="article-card-type">Neutral</h4>
        @foreach (var article in Model.Articles.Where(a => a.bias == Enums.BiasEnum.Neutral))
        {
            <div class="card-body for-neutral-against">
                <p class="card-text">
                    <h5 class="card-title">@article.title[0]</h5>
                    <i class="article-summary">@article.abstrTruncShort</i><br />
                    <details>
                        <summary>more</summary>
                        <i class="article-summary">@article.abstrTruncLong</i><br />
                        <br />
                        <span class="article-details">
                            Authors: @(article.author != null ? string.Join(", ", @article.author.Select(x => x.family + ", " + x.given)) : "N/A")
                        </span>
                        <br />
@*                         <span class="article-details">
                            Journal: @(article.journals != null ? string.Join(", ", @article.journals.Select(x => x.title)) : "N/A")
                        </span>
                        <br /> *@
                        <span class="article-details">
                            Published: @(article.pubDate != null ? article.pubDate.Value.ToString("MMMM yyyy") : "N/A")
                        </span>
                        <br>
                        <span class="article-details">Links:</span>
                        <br>
                        @foreach (var link in @article.links)
                        {
                            <a href="@link">@link</a>
                            <br />
                        }
                    </details>

                    <br />


                </p>
            </div>
        }
    </div>
    <div class="col card border-danger mb-3">
        <h4 class="article-card-type">Against</h4>
        @foreach (var article in Model.Articles.Where(a => a.bias == Enums.BiasEnum.Against))
        {
            <div class="card-body for-neutral-against">
                <p class="card-text">
                    <h5 class="card-title">@article.title[0]</h5>
                    <i class="article-summary">@article.abstrTruncShort</i><br />
                    <details>
                        <summary>more</summary>
                        <i class="article-summary">@article.abstrTruncLong</i><br />
                        <br />
                        <span class="article-details">
                            Authors: @(article.author != null ? string.Join(", ", @article.author.Select(x => x.family + ", " + x.given)) : "N/A")
                        </span>
                        <br />
                        @*                         <span class="article-details">
                    Journal: @(article.journals != null ? string.Join(", ", @article.journals.Select(x => x.title)) : "N/A")
                    </span>
                    <br /> *@
                        <span class="article-details">
                            Published: @(article.pubDate != null ? article.pubDate.Value.ToString("MMMM yyyy") : "N/A")
                        </span>
                        <br>
                        <span class="article-details">Links:</span>
                        <br>
                        @foreach (var link in @article.links)
                        {
                            <a href="@link">@link</a>
                            <br />
                        }
                    </details>

                    <br />


                </p>
            </div>
        }
    </div>
    <form asp-page-handler="Get" method="get">
        <input type="hidden" name="offset" value="@(Model.Offset + 10)" />
        <button id="moreBtn" class="btn btn-secondary" data-loading-text="<i class='fa fa-spinner fa-spin '></i> Loading" onclick="showSpinner()">More</button>
    </form>
    
</div>

<script>
    function showSpinner() {
        document.getElementById("moreBtn").ariaDisabled = "true";
        document.getElementById("moreBtn").innerHTML = '<span class="spinner-border spinner-border-sm" aria-hidden="true">'
    }
</script>