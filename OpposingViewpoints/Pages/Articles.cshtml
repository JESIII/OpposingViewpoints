@page "{topic}"
@model OpposingViewpoints.Pages.ArticlesModel
@{
    ViewData["Title"] = "Articles - " + Model.Topic;
}

<div class="row" style="padding-top:10px;">
    <h3 style="text-align: center;">@System.Globalization.CultureInfo.CurrentCulture.TextInfo.ToTitleCase(Model.Topic)</h3>
    <div class="col card border-success mb-3" style="display:inline">
        <h2>For</h2>
        @foreach (var article in Model.Articles.Where(a => a.bias == Enums.BiasEnum.For))
        {
            <div class="card-body">
                <p class="card-text">
                    <h5 class="card-title">@article.title</h5>
                    <i>@(article.abstrTrunc != null && article.abstrTrunc.Length > 0 ? article.abstrTrunc : "No abstract")<br /></i>
                    Authors:@string.Join(',', @article.authors.Select(x => " " + x.name))
                    <br>
                    Journal: @article?.journal?.name
                    <br>
                    Year: @article.year
                    <br>
                    Times Cited: @article.citationCount
                    <br>
                    <a href="@article.url">Link</a>
                </p>
            </div>
        }
    </div>
    <div class="col card border-info mb-3" style="display:inline">
        <h2>Neutral</h2>
        @foreach (var article in Model.Articles.Where(a => a.bias == Enums.BiasEnum.Neutral))
        {
            <div class="card-body">
                <p class="card-text">
                    <h5 class="card-title">@article.title</h5>
                    <i>@(article.abstrTrunc != null && article.abstrTrunc.Length > 0 ? article.abstrTrunc : "No abstract")<br /></i>
                    Authors:@string.Join(',', @article.authors.Select(x => " " + x.name))
                    <br>
                    Journal: @(article?.journal?.name)
                    <br>
                    Year: @article.year
                    <br>
                    Times Cited: @article.citationCount
                    <br>
                    <a href="@article.url">Link</a>
                </p>
            </div>
        }
    </div>
    <div class="col card border-danger mb-3">
        <h2>Against</h2>
        @foreach (var article in Model.Articles.Where(a => a.bias == Enums.BiasEnum.Against))
        {
            <div class="card-body">
                <p class="card-text">
                    <h5 class="card-title">@article.title</h5>
                    <i>@(article.abstrTrunc != null && article.abstrTrunc.Length > 0 ? article.abstrTrunc : "No abstract")<br /></i>
                    Authors:@string.Join(',', @article.authors.Select(x => " " + x.name))
                    <br>
                    Journal: @(article?.journal?.name)
                    <br>
                    Year: @article.year
                    <br>
                    Times Cited: @article.citationCount
                    <br>
                    <a href="@article.url">Link</a>
                </p>
            </div>
        }
    </div>
</div>